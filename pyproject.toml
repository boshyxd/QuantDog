[project]
name = "quantdog"
version = "0.1.0"
description = "Quantum Threat Detection Platform for Cryptocurrency Transactions"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    # Core frameworks
    "streamlit>=1.29.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # Blockchain integration
    "web3>=6.11.0",
    "python-bitcoinlib>=0.12.0",
    
    # Cryptography
    "cryptography>=41.0.0",
    "pycryptodome>=3.19.0",
    "ecdsa>=0.18.0",
    
    # Data processing and visualization
    "pandas>=2.1.0",
    "numpy>=1.26.0",
    "matplotlib>=3.8.0",
    "plotly>=5.18.0",
    "seaborn>=0.13.0",
    
    # API and networking
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    
    # Environment and configuration
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Utilities
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
quantum = [
    "qiskit>=0.45.0",
    "qiskit-aer>=0.13.0",
]
dev = [
    "ruff==0.1.8",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["core", "services", "ui", "utils"]

[tool.uv]
dev-dependencies = [
    "ruff==0.1.8",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-third-party = ["streamlit", "qiskit", "pandas", "numpy", "web3"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused
"ui/*.py" = ["E402"]  # module level import not at top of file (common in Streamlit)